@{
    ViewData["Title"] = "Roles List";
}

<style>
    table.dataTable {
        table-layout: fixed;
        word-wrap: break-word;
        width: 100% !important;
    }

    .all-cars-table th, .all-cars-table td {
        white-space: normal !important;
        vertical-align: middle;
    }

    /* .pagination-box {
                        margin-top: 20px;
                    } */

    /* Align DataTable controls */
    div.dataTables_wrapper div.dataTables_length {
        float: left;
        padding-left: 15px;
    }

    div.dataTables_wrapper div.dataTables_filter {
        float: right;
        padding-right: 15px;
    }

    .dataTables_wrapper .dataTables_paginate {
        margin-left: 0px;
        border: none !important;
    }
</style>

<!-- Container-fluid starts-->
<div class="container-fluid">
    @if (TempData["SuccessMessage"] != null)
    {
        <div id="successAlert" class="alert alert-success alert-dismissible fade show mt-3" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    <div class="row">
        <div class="col-sm-12">
            <div class="card">
                <div class="card-header card-header--2">
                    <div>
                        <h5>All Promotions</h5>
                    </div>
                    <form class="d-inline-flex">
                        <a asp-controller="Roles" asp-action="Create" class="btn btn-theme">
                            <i data-feather="plus-square"></i>Add New
                        </a>
                    </form>
                </div>

                <div class="card-body">
                    <!-- Removed table-responsive to prevent scroll -->
                    <div class="table-desi">
                        <table id="dtPromotion" class="all-cars-table table table-striped w-100">
                            <thead>
                                <tr>
                                    <th>Role</th>
                                    <th>Notes</th>
                                    <th>Created Date</th>
                                    <th>Modified Date</th>
                                    <th>Edit</th>
                                    <th>Delete</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Container-fluid Ends-->
@section Scripts {
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            var table = $('#dtPromotion').DataTable({
                processing: true,
                serverSide: true,
                info: false, // Hide "Showing X to Y of Z entries"
                ajax: {
                    url: '/Roles/LoadData',
                    type: 'POST'
                },
                language: {
                    processing: `
                        <div style="text-align:center;padding:20px;">
                            <i class="fa fa-spinner fa-spin fa-3x fa-fw" style="color:#2a2b2b;"></i>
                            <span class="sr-only">Loading...</span>
                        </div>`
                },
                drawCallback: function (settings) {
                    customizePagination(table);
                },
                columns: [
                    { data: 'name', autoWidth: true },
                    { data: 'notes', autoWidth: true },
                    // { data: 'createdAt', autoWidth: true },
                    //{ data: 'updatedAt', autoWidth: true },
                            {
            data: 'createdAt',
            autoWidth: true,
            render: function (data, type, row) {
                if (!data) return '';
                const date = new Date(data);
                const formatted = date.toLocaleString('en-US', {
                    year: 'numeric',
                    month: 'short',
                    day: '2-digit',
                    hour: 'numeric',
                    minute: '2-digit',
                    hour12: true
                });
                return formatted;
            }
        },
          {
            data: 'updatedAt',
            autoWidth: true,
            render: function (data, type, row) {
                if (!data) return '';
                const date = new Date(data);
                const formatted = date.toLocaleString('en-US', {
                    year: 'numeric',
                    month: 'short',
                    day: '2-digit',
                    hour: 'numeric',
                    minute: '2-digit',
                    hour12: true
                });
                return formatted;
            }
        },
                    {
             data: 'id',
        render: function (data, type, row) {
            return `
                <form method="post" action="/Roles/Edit" style="display:inline;" onsubmit="event.stopPropagation();">
                    <input type="hidden" name="id" value="${data}" />
                    <button type="submit" class="btn btn-link p-0" style="border: none; background: none;">
                        <i class="fa fa-pencil-square-o" style="color: #007bff; font-size: 20px;" aria-hidden="true"></i>
                    </button>
                </form>
            `;
        }
                    },
                    {
                        // data: 'id',
                        // render: function (data, type, row) {
                        //     return `<a href="/Roles/Delete/${data}"><i class="fa fa-trash-o"aria-hidden="true"></i></a>`
                        // }
                             data: 'id',
        render: function (data, type, row) {
            return `
                <form action="/Roles/DeleteConfirmed" method="post" style="display:inline;" onsubmit="event.stopPropagation();">
                    <input type="hidden" name="id" value="${data}" />
                    <button type="submit"
                            class="btn btn-link p-0" style="border: none; background: none;"
                            style="background-color: #5b6bc0; border: none; padding: 6px 12px; border-radius: 8px; width: 75px;"
                            onclick="return confirm('Are you sure you want to permanently delete this role?');"
                            title="Delete">
                        <i class="fa fa-trash-o" style="color: red; font-size: 20px;" aria-hidden="true"></i>
                    </button>
                </form>`;
        }
        // {
        //      data: 'id',
        // render: function (data, type, row) {
        //     return `
        //         <form method="post" action="/Roles/Edit" style="display:inline;" onsubmit="event.stopPropagation();">
        //             <input type="hidden" name="id" value="${data}" />
        //             <button type="submit" class="btn btn-link p-0" style="border: none; background: none;">
        //                 <i class="fa fa-trash-o" style="color: red; font-size: 20px;" aria-hidden="true"></i>
        //             </button>
        //         </form>
        //     `;
        // }
        //             }
                    }


                ]
            });
        });

        function customizePagination(table) {
            const pagination = $('#dtPromotion_paginate');
            const currentPage = table.page.info().page + 1;
            const totalPages = table.page.info().pages;

            let customPagination = `
                <div class="pagination-box">
                  <div class="dtpagination-height my-4">
                    <nav class="ms-auto me-auto" aria-label="...">
                        <ul class="pagination pagination-primary justify-content-center">
                            <li class="page-item ${currentPage === 1 ? 'disabled' : ''}">
                                <a class="page-link" href="javascript:void(0)" data-page="prev">Previous</a>
                            </li>`;

            for (let i = 1; i <= totalPages; i++) {
                customPagination += `
                    <li class="page-item ${i === currentPage ? 'active' : ''}">
                        <a class="page-link" href="javascript:void(0)" data-page="${i}">${i}</a>
                    </li>`;
            }

            customPagination += `
                            <li class="page-item ${currentPage === totalPages ? 'disabled' : ''}">
                                <a class="page-link" href="javascript:void(0)" data-page="next">Next</a>
                            </li>
                        </ul>
                    </nav>
                </div></div>`;

            pagination.html(customPagination);

            $('.pagination-box .page-link').off('click').on('click', function () {
                const page = $(this).data('page');
                if (page === 'next') {
                    table.page('next').draw('page');
                } else if (page === 'prev') {
                    table.page('previous').draw('page');
                } else {
                    table.page(parseInt(page) - 1).draw('page');
                }
            });
        }
        document.addEventListener("DOMContentLoaded", function () {
            setTimeout(function () {
                var alert = document.getElementById('successAlert');
                if (alert) {
                    alert.classList.remove('show');
                }
            }, 3000);
        });

    </script>
}
